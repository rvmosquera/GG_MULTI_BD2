{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"RTree","provenance":[],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"SkXIPpCrD8DV"},"source":["# R-Tree file Generation\r\n","Using the collection of images located in [link text](https://onedrive.live.com/?authkey=%21ANNEKv7tNdlSSQk&id=C2923DF9F1F816F%2150817&cid=0C2923DF9F1F816F) we extract the charegenerated the inverted index using the tf.idf score."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1RKNLJ_9VvxL","executionInfo":{"status":"ok","timestamp":1607747476564,"user_tz":300,"elapsed":12503,"user":{"displayName":"Raúl Vides Mosquera Pumaricra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GixAbdcwL-q2-Q7sJw8n1IHBgkuZR-nPnlUfKY3=s64","userId":"06176362369982867315"}},"outputId":"20b2d8a3-ba39-48c9-d803-59cafb931af5"},"source":["!apt install python3-rtree"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following additional packages will be installed:\n","  libspatialindex-c4v5 libspatialindex-dev libspatialindex4v5\n","  python3-pkg-resources\n","Suggested packages:\n","  python3-setuptools\n","The following NEW packages will be installed:\n","  libspatialindex-c4v5 libspatialindex-dev libspatialindex4v5\n","  python3-pkg-resources python3-rtree\n","0 upgraded, 5 newly installed, 0 to remove and 14 not upgraded.\n","Need to get 671 kB of archives.\n","After this operation, 3,948 kB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libspatialindex4v5 amd64 1.8.5-5 [219 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libspatialindex-c4v5 amd64 1.8.5-5 [51.7 kB]\n","Get:3 http://archive.ubuntu.com/ubuntu bionic/main amd64 python3-pkg-resources all 39.0.1-2 [98.8 kB]\n","Get:4 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libspatialindex-dev amd64 1.8.5-5 [285 kB]\n","Get:5 http://archive.ubuntu.com/ubuntu bionic/universe amd64 python3-rtree all 0.8.3+ds-1 [16.9 kB]\n","Fetched 671 kB in 1s (547 kB/s)\n","Selecting previously unselected package libspatialindex4v5:amd64.\n","(Reading database ... 144865 files and directories currently installed.)\n","Preparing to unpack .../libspatialindex4v5_1.8.5-5_amd64.deb ...\n","Unpacking libspatialindex4v5:amd64 (1.8.5-5) ...\n","Selecting previously unselected package libspatialindex-c4v5:amd64.\n","Preparing to unpack .../libspatialindex-c4v5_1.8.5-5_amd64.deb ...\n","Unpacking libspatialindex-c4v5:amd64 (1.8.5-5) ...\n","Selecting previously unselected package python3-pkg-resources.\n","Preparing to unpack .../python3-pkg-resources_39.0.1-2_all.deb ...\n","Unpacking python3-pkg-resources (39.0.1-2) ...\n","Selecting previously unselected package libspatialindex-dev:amd64.\n","Preparing to unpack .../libspatialindex-dev_1.8.5-5_amd64.deb ...\n","Unpacking libspatialindex-dev:amd64 (1.8.5-5) ...\n","Selecting previously unselected package python3-rtree.\n","Preparing to unpack .../python3-rtree_0.8.3+ds-1_all.deb ...\n","Unpacking python3-rtree (0.8.3+ds-1) ...\n","Setting up libspatialindex4v5:amd64 (1.8.5-5) ...\n","Setting up python3-pkg-resources (39.0.1-2) ...\n","Setting up libspatialindex-c4v5:amd64 (1.8.5-5) ...\n","Setting up libspatialindex-dev:amd64 (1.8.5-5) ...\n","Setting up python3-rtree (0.8.3+ds-1) ...\n","Processing triggers for libc-bin (2.27-3ubuntu1.2) ...\n","/sbin/ldconfig.real: /usr/local/lib/python3.6/dist-packages/ideep4py/lib/libmkldnn.so.0 is not a symbolic link\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nF9mjcSTC9BI","executionInfo":{"status":"ok","timestamp":1607747519132,"user_tz":300,"elapsed":26185,"user":{"displayName":"Raúl Vides Mosquera Pumaricra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GixAbdcwL-q2-Q7sJw8n1IHBgkuZR-nPnlUfKY3=s64","userId":"06176362369982867315"}},"outputId":"5e077d9d-2804-46c4-f889-70c54834d32e"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"IjuCAP6ANdK0"},"source":["##Image extraction\r\n","Extract the images from the zip File"]},{"cell_type":"code","metadata":{"id":"QBGoiZtyJKYt"},"source":["import zipfile\n","\n","zip_ref = zipfile.ZipFile(\"/content/drive/My Drive/DB2/Project3/Data/Collection.zip\", 'r')\n","zip_ref.extractall(\"/tmp\")\n","zip_ref.close()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H1HxR8WS-oZI","executionInfo":{"status":"ok","timestamp":1607747450084,"user_tz":300,"elapsed":30634,"user":{"displayName":"Raúl Vides Mosquera Pumaricra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GixAbdcwL-q2-Q7sJw8n1IHBgkuZR-nPnlUfKY3=s64","userId":"06176362369982867315"}},"outputId":"ec0c804c-b0d6-4c7b-a1cd-4c64e2799324"},"source":["!pip install face_recognition"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting face_recognition\n","  Downloading https://files.pythonhosted.org/packages/1e/95/f6c9330f54ab07bfa032bf3715c12455a381083125d8880c43cbe76bb3d0/face_recognition-1.3.0-py2.py3-none-any.whl\n","Requirement already satisfied: Pillow in /usr/local/lib/python3.6/dist-packages (from face_recognition) (7.0.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from face_recognition) (1.18.5)\n","Requirement already satisfied: dlib>=19.7 in /usr/local/lib/python3.6/dist-packages (from face_recognition) (19.18.0)\n","Collecting face-recognition-models>=0.3.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/cf/3b/4fd8c534f6c0d1b80ce0973d01331525538045084c73c153ee6df20224cf/face_recognition_models-0.3.0.tar.gz (100.1MB)\n","\u001b[K     |████████████████████████████████| 100.2MB 74kB/s \n","\u001b[?25hRequirement already satisfied: Click>=6.0 in /usr/local/lib/python3.6/dist-packages (from face_recognition) (7.1.2)\n","Building wheels for collected packages: face-recognition-models\n","  Building wheel for face-recognition-models (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for face-recognition-models: filename=face_recognition_models-0.3.0-py2.py3-none-any.whl size=100566173 sha256=1a4e71610c6d2e8ef71aa539a1a0258c350846a63dd1049c4c9d90a7442b65b3\n","  Stored in directory: /root/.cache/pip/wheels/d2/99/18/59c6c8f01e39810415c0e63f5bede7d83dfb0ffc039865465f\n","Successfully built face-recognition-models\n","Installing collected packages: face-recognition-models, face-recognition\n","Successfully installed face-recognition-1.3.0 face-recognition-models-0.3.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"v3GDMFNDNWHU"},"source":["def process_collection(rtree_name, n_images):\n","  from rtree import index\n","  import face_recognition\n","  import os\n","\n","  #Traverse collection\n","  path = \"/tmp/lfw\"\n","  dir_list = os.listdir(path)\n","\n","  p = index.Property()\n","  p.dimension = 128 #D\n","  p.buffering_capacity = 7 #M\n","  p.dat_extension = 'data'\n","  p.idx_extension = 'index'\n","  rtree_idx = index.Index(rtree_name, properties = p) #r-tree filename\n","\n","  index=0\n","  break_fg = False\n","  for file_path in dir_list:\n","    path_tmp = path + \"/\" + file_path\n","\n","    img_list = os.listdir(path_tmp)\n","    \n","    for file_name in img_list: \n","      path_tmp2 = path_tmp + \"/\" + file_name\n","#      print(\"Processing: \", path_tmp2)\n","      img = face_recognition.load_image_file(path_tmp2)\n","\n","#     Get face encodings for any faces in the uploaded image\n","      unknown_face_encodings = face_recognition.face_encodings(img)\n","\n","      for elem in unknown_face_encodings:\n","\n","        if index == n_images: #Process n_images \n","          break_fg = True\n","          break\n","\n","        coor_tmp = list(elem)\n","        for coor_i in elem:\n","          coor_tmp.append(coor_i)\n","        rtree_idx.insert(index, coor_tmp)\n","        index = index + 1\n","        \n","      if break_fg:\n","        break\n","\n","    if break_fg:\n","      break    \n","\n","  print(str(index) + \" images processed\")\n","  return rtree_idx\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EswYe52NOGaI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607755783022,"user_tz":300,"elapsed":1726,"user":{"displayName":"Raúl Vides Mosquera Pumaricra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GixAbdcwL-q2-Q7sJw8n1IHBgkuZR-nPnlUfKY3=s64","userId":"06176362369982867315"}},"outputId":"b6182ea8-11ea-434c-8511-db9833327a81"},"source":["path = \"/content/drive/My Drive/DB2/Project3/\"\r\n","rtree_name = path + 'rtree_10'\r\n","\r\n","process_collection(rtree_name, 10)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["10 images processed\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<rtree.index.Index at 0x7f38043e15f8>"]},"metadata":{"tags":[]},"execution_count":89}]},{"cell_type":"code","metadata":{"id":"eOFDrsPzAvVy"},"source":["import face_recognition\n","import numpy as np\n","import os\n","from rtree import index\n","\n","#picture_of_vizcarra = face_recognition.load_image_file(\"fotos_bd/vizcarra.png\")\n","\n","path = '/content/drive/My Drive/DB2/Project3/Data/Test_1'\n","pics_list = os.listdir(path)\n","\n","print(\"There are \", len(pics_list), \" pictures to process\")\n","\n","p = index.Property()\n","p.dimension = 128 #D\n","p.buffering_capacity = 3 #M\n","p.dat_extension = 'data'\n","p.idx_extension = 'index'\n","file_idx = index.Index('/tmp/rtree', properties = p)\n","\n","index=0\n","for file_name in pics_list:\n","  print(\"Processing: \", file_name)\n","  img_fname = path + '/' + file_name\n","  img = face_recognition.load_image_file(img_fname)\n","# Get face encodings for any faces in the uploaded image\n","  unknown_face_encodings = face_recognition.face_encodings(img)\n","\n","  for elem in unknown_face_encodings:\n","\n","    coor_tmp = list(elem)\n","    print(\"before \", len(coor_tmp))\n","    for coor_i in elem:\n","      coor_tmp.append(coor_i)\n","    #print(len(coor_tmp))\n","    file_idx.insert(index, coor_tmp)\n","    index = index + 1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"S9pELyW5MhiJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607749180404,"user_tz":300,"elapsed":2596,"user":{"displayName":"Raúl Vides Mosquera Pumaricra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GixAbdcwL-q2-Q7sJw8n1IHBgkuZR-nPnlUfKY3=s64","userId":"06176362369982867315"}},"outputId":"84f34178-52b1-4ff9-f4ec-9ccf6e606477"},"source":["import face_recognition as fr\n","import numpy as np\n","import os\n","import heapq \n","from timeit import default_timer as timer\n","#from queue import PriorityQueue\n","\n","path = '/content/drive/My Drive/DB2/Project3/Data/Test_1'\n","pics_list = os.listdir(path)\n","\n","def encode(name):\n","  img = fr.load_image_file(path + '/' + name)\n","  return fr.face_encodings(img)[0]\n","\n","\n","\n","def KNN_Seq(k,to_search):  \n","  result = PriorityQueue()\n","  \n","  \n","  query = encode(to_search)\n","\n","  cantidad = 0\n","  conocidas = []\n","  names_in_order = []\n","  #Se recorren todas las imagenes\n","  for file_name in pics_list:\n","    cantidad = cantidad +1\n","    print(\"Processing: \", file_name)\n","    img_fname = path + '/' + file_name\n","    img = fr.load_image_file(img_fname)\n","    aux = fr.face_encodings(img)[0]\n","    names_in_order.append(file_name)\n","   #se agrega el vector caracteristico de la imagen a un dataset de vectore caracteristicos\n","    conocidas.append(aux)\n","\n","  distances = fr.face_distance(conocidas,query)\n","  res = [] \n","  for i in range(cantidad):\n","    res.append((distances[i],names_in_order[i]))\n","  \n","  heapq.heapify(res) \n","\n","  return heapq.nsmallest(k, res)\n","\n","\n","\n"," \n","start = timer()\n","print(KNN_Seq(100,\"foto1.jpg\"))\n","end = timer()\n","print(end - start,\" seconds\")  \n","\n","\n","\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Processing:  foto1.jpg\n","Processing:  foto2.jpg\n","Processing:  foto3.jpg\n","Processing:  foto4.jpg\n","[(0.0, 'foto1.jpg'), (0.3565082433220163, 'foto4.jpg'), (0.8018813371423902, 'foto2.jpg'), (0.9017904738095106, 'foto3.jpg')]\n","2.0588475909999033  seconds\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"01wsh0eolVo4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607745280496,"user_tz":300,"elapsed":10051,"user":{"displayName":"Osman Rafael Vilchez Aguirre","photoUrl":"","userId":"00113939185402483081"}},"outputId":"9e0414cc-ad7b-41cc-da76-e925211dff3d"},"source":["import face_recognition as fr\n","import numpy as np\n","import os\n","import heapq \n","from timeit import default_timer as timer\n","#from queue import PriorityQueue\n","\n","path = '/content/drive/My Drive/DB2/Project3/Data/Test_1'\n","pics_list = os.listdir(path)\n","\n","def encode(name):\n","  img = fr.load_image_file(path + '/' + name)\n","  return fr.face_encodings(img)[0]\n","\n","\n","\n","def search_r(r,to_search):  \n","  query = encode(to_search)\n","  cantidad = 0\n","  conocidas = []\n","  names_in_order = []\n","  for file_name in pics_list:\n","    cantidad = cantidad +1\n","    print(\"Processing: \", file_name)\n","    img_fname = path + '/' + file_name\n","    img = fr.load_image_file(img_fname)\n","    aux = fr.face_encodings(img)[0]\n","    names_in_order.append(file_name)\n","    conocidas.append(aux)\n","\n","  distances = fr.face_distance(conocidas,query)\n","  \n","  res = []\n","  for i in range(cantidad):\n","    if distances[i]<=r:\n","      res.append((distances[i],names_in_order[i]))\n","\n","  return res\n","\n","name_img = \"foto1.jpg\"\n","print(search_r(0.5,name_img))\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Processing:  foto1.jpg\n","Processing:  foto3.jpg\n","Processing:  foto4.jpg\n","Processing:  foto2.jpg\n","[(0.0, 'foto1.jpg'), (0.3565082433220163, 'foto4.jpg')]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FWMlAJMEKjVo","executionInfo":{"status":"ok","timestamp":1607757749070,"user_tz":300,"elapsed":6416,"user":{"displayName":"Raúl Vides Mosquera Pumaricra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GixAbdcwL-q2-Q7sJw8n1IHBgkuZR-nPnlUfKY3=s64","userId":"06176362369982867315"}},"outputId":"d995ad4c-ec6d-4623-e3a3-51493ea7935a"},"source":["# Version 2.0 de pruebas\n","import face_recognition as fr\n","import numpy as np\n","import os\n","import heapq \n","from timeit import default_timer as timer\n","\n","path = '/content/drive/My Drive/DB2/Project3/Data/Test_1'\n","pics_list = os.listdir(path)\n","start = 0 \n","\n","def encode(name):\n","  img = fr.load_image_file(path + '/' + name)\n","  return fr.face_encodings(img)[0]\n","\n","\n","\n","def KNN_Seq(k,to_search,n):  \n","  global start\n","  query = encode(to_search)\n","\n","  #cantidad = 0\n","  #conocidas = []\n","  #names_in_order = []\n","  #c = 0\n","  #for file_name in pics_list:\n","    \n","  #  cantidad = cantidad +1\n","  #  print(\"Processing: \", file_name)\n","  #  img_fname = path + '/' + file_name\n","  #  img = fr.load_image_file(img_fname)\n","  #  aux_c = fr.face_encodings(img)\n","  #  c = c+1\n","  #  for aux in aux_c:\n","  #    names_in_order.append(file_name)\n","  #    conocidas.append(aux)\n","  #  if c>n:\n","  #    break\n","\n","  #Traverse collection\n","  path = \"/tmp/lfw\"\n","  dir_list = os.listdir(path)\n","\n","\n","  cantidad = 0\n","  conocidas = []\n","  names_in_order = []\n","  break_fg = False\n","  c = 0  \n","  for file_path in dir_list:\n","    path_tmp = path + \"/\" + file_path\n","\n","    img_list = os.listdir(path_tmp)\n","    \n","    for file_name in img_list: \n","      path_tmp2 = path_tmp + \"/\" + file_name\n","      #print(\"Processing: \", path_tmp2)\n","      img = fr.load_image_file(path_tmp2)\n","\n","#     Get face encodings for any faces in the uploaded image\n","      unknown_face_encodings = fr.face_encodings(img)\n","\n","      for elem in unknown_face_encodings:\n","\n","        if c == n: #Process n_images \n","          break_fg = True\n","          break\n","\n","        #coor_tmp = list(elem)\n","        #for coor_i in elem:\n","        #  names_in_order.append(file_name)\n","        #  conocidas.append(coor_i)\n","        names_in_order.append(file_name)\n","        conocidas.append(elem)        \n","        c = c + 1\n","        \n","      if break_fg:\n","        break\n","\n","    if break_fg:\n","      break    \n","\n","  print(str(c) + \" faces processed\")\n","\n","  start = timer() \n","  distances = fr.face_distance(conocidas,query)\n","  res = [] \n","  for i in range(cantidad):\n","    res.append((distances[i],names_in_order[i]))\n","  \n","  heapq.heapify(res)   \n","  return heapq.nsmallest(k, res)\n","\n","\n","print(KNN_Seq(8,\"foto1.jpg\",100))\n","end = timer()\n","print(end - start,\" seconds\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["100 faces processed\n","[]\n","0.0005952600004093256  seconds\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qCJgA0DujJJw"},"source":["R-tree Test"]},{"cell_type":"code","metadata":{"id":"lweKsKbljIoV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607759488623,"user_tz":300,"elapsed":86953,"user":{"displayName":"Raúl Vides Mosquera Pumaricra","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GixAbdcwL-q2-Q7sJw8n1IHBgkuZR-nPnlUfKY3=s64","userId":"06176362369982867315"}},"outputId":"4dcc1b13-7f54-41ed-d69b-70369b32af13"},"source":["from rtree import index\r\n","\r\n","def encode_for_r(name):\r\n","  path = '/content/drive/My Drive/DB2/Project3/Data/Test_1'\r\n","\r\n","  img = fr.load_image_file(path + '/' + name)\r\n","  return fr.face_encodings(img)[0]\r\n","\r\n","start = 0 \r\n","def KNN_rtree(k, to_search, n):\r\n","  global start\r\n","# R-Tree generation\r\n","  path = \"/content/drive/My Drive/DB2/Project3/\"\r\n","  rtree_name = path + 'rtree_' + str(n)\r\n","  rtree_idx = process_collection(rtree_name, n)\r\n","  print(\"R-tree generated\")\r\n","# From image\r\n","  query = encode_for_r(to_search)\r\n","\r\n","  #p = index.Property()\r\n","  #p.dimension = 128 #D\r\n","  #p.buffering_capacity = 3 #M\r\n","  #p.dat_extension = 'data'\r\n","  #p.idx_extension = 'index'\r\n","  #idx = index.Index(rtree_name, properties=p)\r\n","\r\n","  query_list = list(query)\r\n","  for query_i in query:\r\n","    query_list.append(query_i)\r\n","  \r\n","  start = timer() \r\n","  return rtree_idx.nearest(coordinates=query_list, num_results=k)\r\n","\r\n","KNN_rtree(8, \"foto1.jpg\", 1600)\r\n","end = timer()\r\n","print(end - start,\" seconds\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1600 images processed\n","R-tree generated\n","0.028714757001580438  seconds\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8nhMApFdltXy"},"source":["#print(KNN_rtree(8, \"foto1.jpg\", 100))\r\n","#end = timer()\r\n","#print(end - start,\" seconds\")"],"execution_count":null,"outputs":[]}]}